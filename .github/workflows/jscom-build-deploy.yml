name: Deploy to S3 and Invalidate CloudFront

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - name: Build site
        id: build-step
        run: |
          cd website
          bundle install
          bundle exec jekyll build
          cd ..
          echo "::set-output name=site-dir::website/_site"

  deploy-to-s3:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            aws s3 sync ${{ needs.build.outputs.site-dir }}/ s3://${{ secrets.STAGE_S3_BUCKET_NAME }}
          else
            aws s3 sync ${{ needs.build.outputs.site-dir }}/ s3://${{ secrets.WWW_S3_BUCKET_NAME }}
            aws s3 sync ${{ needs.build.outputs.site-dir }}/ s3://${{ secrets.ROOT_S3_BUCKET_NAME }}
          fi

  invalidate-cloudfront:
    needs: deploy-to-s3
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Invalidate CloudFront Distribution(s)
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGE_CLOUDFRONT_ID }} --paths "/*"
          else
            aws cloudfront create-invalidation --distribution-id ${{ secrets.WWW_CLOUDFRONT_ID }} --paths "/*"
            aws cloudfront create-invalidation --distribution-id ${{ secrets.ROOT_CLOUDFRONT_ID }} --paths "/*"
          fi
